SELECT 
    driver_name AS Driver, 
    race_date AS RaceDate, 
    driver_points AS DriverPoints
FROM 
    races
WHERE 
    YEAR(race_date) = 2020
ORDER BY 
    driver_points DESC;
   SELECT: This part specifies which columns to retrieve and includes renaming them with AS.
FROM: This specifies the table to select data from.
WHERE: This condition filters the results to only include rows from the year 2020.
ORDER BY: This sorts the results by driver_points in descending order (highest points first).
def is_palindrome(s):
    # Remove spaces and convert to lowercase
    cleaned = ''.join(s.split()).lower()
    # Check if the cleaned string is the same forwards and backwards
    return cleaned == cleaned[::-1]

# Examples
print(is_palindrome("madam"))        # True
print(is_palindrome("kayak"))        # True
print(is_palindrome("racecar"))      # True
print(is_palindrome("nurse run"))    # True
print(is_palindrome("hello"))        # False

s.split(): Splits the string into words, removing spaces.
''.join(...): Joins the words back into a single string without spaces.
.lower(): Converts the string to lowercase to ensure the check is case-insensitive.
cleaned[::-1]: Reverses the cleaned string.



def is_pangram(s):
    # Define the set of all letters in the English alphabet
    alphabet = set('abcdefghijklmnopqrstuvwxyz')
    # Convert the string to lowercase and create a set of characters in the string
    input_set = set(s.lower())
    # Check if all alphabet letters are present in the input set
    return alphabet.issubset(input_set)

# Examples
print(is_pangram("the quick brown fox jumps over the lazy dog"))  # True
print(is_pangram("hello world"))                                   # False
set('abcdefghijklmnopqrstuvwxyz'): Creates a set of all lowercase letters in the English alphabet.
set(s.lower()): Converts the input string to lowercase and creates a set of its characters.
alphabet.issubset(input_set): Checks if all letters in the alphabet set are present in the input set.
def reverse_integer(n):
    # Convert the integer to a string, reverse it, and convert back to integer
    reversed_n = int(str(n)[::-1])
    return reversed_n

# Example usage
input_number = int(input("Enter an integer: "))
result = reverse_integer(input_number)
print(result)
ef capitalize_first_word(s):
    # Split the string into words
    words = s.split()
    # Capitalize the first word if it exists
    if words:
        words[0] = words[0].capitalize()
    # Join the words back into a single string
    return ' '.join(words)

# Example usage
input_string = input("Enter a string: ")
result = capitalize_first_word(input_string)
print(result)
